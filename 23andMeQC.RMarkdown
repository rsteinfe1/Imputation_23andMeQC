---
title: "23andMe Imputation QC"
author: "Robert Steinfelder"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(dev="CairoPNG")
```

## Impact of Missingness on Single Sample Imputated Direct To Consumer Genotyping Data

The purpose of this work is to track our work investigating the relationship 
between PRS, imputation $Rsq$, missingness and MAF from 54 23andMe samples randomly 
selected from [Personal Genome Project](https://my.pgp-hms.org/public_genetic_data?data_type=23andMe).
 
The 54 23andMe genotyping files were pre-processed (individually):
1) Converting 23andMe to VCF
2) Subset SNPs to chr1-chr22 and filter InDels and missing SNPs
3) Pre-phase with Eagle2
4) Imputation with Minimac4
5) Subset SNPs to PRS SNPs

### PCA plot with 1000 Genomes

First 2 PCs of imputed VCF files were plotted with 1000Genomes cohort to check 
population structure, detect potential outliers and to see if there are 
potential issues with imputation. 

```{r}
library(ggplot2)
sf = read.table("/fh/fast/peters_u/GECCO_Working/robert_working/Projects/Webtool_PRS/Test/calibrate/PRS_Summary_from_Prototype_w_for_validation_adjusted_wPCs_Apr28_2025.tsv", header=T, sep='\t')

pc1kg = read.table("/fh/fast/peters_u/GECCO_Working/mintaworking/RS_Project/pcs_1000G/1000G_PCA.txt",
        header=T, sep='\t')
pcp = data.frame(PC1=c(pc1kg$PC1, sf$PC1),
                 PC2=c(pc1kg$PC2, sf$PC2),
                 race=c(pc1kg$race, rep("23andMe", nrow(sf))))
ggplot(pcp, aes(x=PC1, y=PC2, color=race)) + geom_point() + theme_minimal()

```

The plot shows no clear outliers, however, it's surprising that no samples
cluster with white/EUR. They are all in the admixed american (AMR/Latino) samples. 
This could indicate a bias introduced from single sample imputation. 

### Missingness and Imputation $Rsq$

Next, we check for missingness in each sample and if there is an affect on $Rsq$.
```{r}
results = read.table("/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/inputQC/23andMe_imputation_stats_Apr28_2025.tsv", header=T, 
                     sep='\t')
ggplot(results, aes(x=n.SNP, y=pct.NA)) + geom_point() + theme_minimal()
```

Missingness ranges between 1-3.5%. Furthermore, 
there seems to be about 3 different SNP counts (~600k, ~950k, ~1.3M). 
This is explained by the differently sized microarray chips that were used by 23andMe. 
We will plot samples with chip size, to easier spot potential batch effects. 

```{r}
results$chip = ifelse(results$n.SNP < 750000, "600k", ifelse(results$n.SNP < 1000000, "950k", "1.3m"))
table(results$chip)
```

Let's compare percent missingness to mean $Rsq$:

```{r}
p = ggplot(results, aes(x=pct.NA, y=R2.mean, color=chip)) + geom_point() + theme_minimal()
plot(p)
```

- Missingness of > 1.5% does seem to have an impact on samples genotyped on small chips 
(600k SNPs). 
- There is also one sample with low missingness (< 1%) but a much
lower $Rsq$ (< 0.1). The sample (FID: genome_23-And-Me) should be further
investigated and is a candidate to drop. 

Next, we check if missingness or $Rsq$ has an impact on PRS. 

```{r}
p = ggplot(results, aes(x=pct.NA, y=PRS.raw, color=chip)) + geom_point() + theme_minimal()
plot(p)
p = ggplot(results, aes(x=R2.mean, y=PRS.raw, color=chip)) + geom_point() + theme_minimal()
plot(p)
```

Neither percent missingness or mean $Rsq$ 
correlate with PRS. However, PRS could still be biased (e.g., towards
the population mean), which wouldn't be observed here.

Imputation $Rsq$ is defined as:

$Rsq = \frac{Var(posterior\ dosage)}{Var(true\ genotypes)}$

The denominator is usually estimated from the imputed cohort [Binary Dosage] (https://cran.r-project.org/web/packages/BinaryDosage/vignettes/r2estimates.html).
In single sample imputation, though, it is estimated from the reference
population -in our case, the 1000 genomes cohort. For monomorphic SNPs or SNPs 
with low MAF this could lead to problems, since the denominator can get very 
small causing unstable $Rsq$.  

### Imputation $Rsq$ and MAF

To visualize this, let's plot MAF vs $Rsq$ for chr1 of sample 912014genome_Full_20140901163652:

```{r}
library(vcfR)
library(ggExtra)
makeMutID <- function(vcf){
        if(nrow(vcf@fix) > 1){
                return(paste(paste(apply(vcf@fix[,c("CHROM", "POS")], MARGIN=1, paste, collapse=":"),
                vcf@fix[,c("REF")], sep=":"), vcf@fix[,c("ALT")], sep=":"))
        }
        if(nrow(vcf@fix) == 1){
                return(paste(paste(paste(vcf@fix[,c("CHROM", "POS")], collapse=":"),
                vcf@fix[,c("REF")], sep=":"), vcf@fix[,c("ALT")], sep=":"))
        }
                return()
}

ids = results$FID
i = 1
chr = 1
prssnps = read.table("/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/NF_Sam/ref/trans_prs_Nov_19.txt",
        header=T, sep='\t')

vcf_path = paste0("/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/prs_prototype_test/output/", ids[i], ".imputed.chr", chr, ".vcf.gz")
vcf = read.vcfR(vcf_path, verbose = FALSE)
mid = makeMutID(vcf)
vcf = vcf[ mid %in% prssnps$newid,]
mid = makeMutID(vcf)
vcf@fix[,"ID"] = mid
r2 = extract.info(vcf, element="R2", as.numeric=T)
maf = extract.info(vcf, element="MAF", as.numeric=T)
gt = extract.gt(vcf, element = "GT")
ds = extract.gt(vcf, element = "DS")
vstats = data.frame(maf=maf, r2=r2, gt=gt)
p = ggplot(vstats, aes(x=maf, y=r2, color=gt)) + geom_point(pch=1) + theme_minimal()
plot(ggMarginal(p, type = "histogram"))

```

- The marginal scatterplot shows ~20% of (PRS) SNPs to have a MAF < 0.01.
These could have an unreliable or deflated $Rsq$. 
- Homozygous SNPs (red/purple), especially with a low MAF show a lower $Rsq$.
- Heterozygous SNPs (green/blue) with high MAF have a low $Rsq$.

We can likely explain the low mean $Rsq$ from the rare or monomorphic SNPs. 
This does not show SNPs are improperly imputed and it was shown before
that single sample imputation does not strongly impact
PRS. We have shown that

- Low missing rate can still lead to low $Rsq$.  
- High missingrate (>1.5%) causes a lower $Rsq$ in 23andMe samples from 600k chips
- $Rsq$ is likely deflated due to single sample imputation

Questions:

__Q1__: What causes a sample to have an $Rsq < 0.1$ with low missingness?

__A1__: (in progress)

__Q2__: Is the shift of samples in the PC plot caused by single sample imputation and 
is it a concern?

__A2__: Minta pointed out that the shift is expected and caused by the fact that
principal components are computed from external SNP loadings [Price et al, 2010]. 

__Q3__: Can we boost imputation quality and $Rsq$ by imputing several 23andMe 
samples together? Does this affect PRS?

__A3__: This is discussed in [the next section](#cohort-imputation-of-23andme-and-rsq).

__Q4__: What is the range of $Rsq$ for a given MAF

__A4__:For a MAF between 0.28 and 0.32 the range of $Rsq$ is (0,0.47). There seems 
to be an upper limit dependant on MAF. 
```{r}
summary(r2[which(maf > 0.28 & maf < 0.32)])
```
Since the denominator in the $Rsq$ calculation -i.e., $Var(true\ genotype)$-
is almost 1 for rare genotypes 
(there are very few observations in the reference cohort) the $Rsq$ is 
largely described by the variance of the estimated dosage. (to be discussed??) 

## Batch Imputation of 23andMe and $Rsq$

A batch of 50 23andMe files are merged and split by chromosome before phased with Eagle2 
and imputation with Minimac4.1.6. MAF and R2 of batch-imputed genotypes showed 
a very different pattern. Marginal plot of chr1 of the same sample from above 
was plotted with new $Rsq$ estimates:

```{r}
id = "912014genome_Full_20140901163652"
vcf_path = "/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/inputQC/23andMe_impute/vcf/"
vcf2 = read.vcfR(paste0(vcf_path, "chr1.imputed.vcf.gz"), verbose=F)
mid2 = makeMutID(vcf2)
vcf2 = vcf2[ mid2 %in% prssnps$newid,]
mid2 = makeMutID(vcf2)
vcf2@fix[,"ID"] = mid2
r22 = extract.info(vcf2, element="R2", as.numeric=T)
maf2 = extract.info(vcf2, element="MAF", as.numeric=T)
gt2 = extract.gt(vcf2, element = "GT")[,id]
ds2 = extract.gt(vcf2, element = "DS")[,id]

vstats = data.frame(maf=maf2, r2=r22, gt=gt2)
p = ggplot(vstats, aes(x=maf, y=r2, color=gt)) + geom_point(pch=1) + theme_minimal()
plot(ggMarginal(p, type = "histogram"))

print(mean(r22))

```

$Rsq$ estimates appear much higher with batch imputation. Hard to impute variants -e.g., low MAF
- are of low quality/$Rsq$, as expected. Variants with MAF > 0.01 show a noticeably higher
$Rsq$ than from single sample imputation. Mean $Rsq$ exceeds 0.96 for this sample and chromosome.
Dosage correlation is investigated for the sample and chromosome with a hexplot:

```{r}
dstats = data.frame(cohort=as.numeric(ds), single=as.numeric(ds2))
colnames(dstats) = c("cohort", "single")
rownames(dstats) = NULL
ggplot(dstats, aes(x=cohort, y=single)) + geom_hex(bins=60) + scale_fill_viridis_c() + theme_minimal()
cor(dstats$cohort, dstats$single)

discordant_by_threshold <- function(x, y, threshold = 1) {
  diff <- abs(x - y)
  sum(diff > threshold)
}

d = discordant_by_threshold(dstats$cohort, dstats$single, threshold = 0.2)
print(d/nrow(dstats))

```

There are sporadic discordant dosages with ~7% of SNPs where 
$\lvert dosage_{batch} - dosage_{single}\rvert > 0.2$

This is expected, we have previously observed this when comparing 
single sample imputed to batch imputed samples from the GenomeQuebec cohort.

We should check correlation of raw PRS of the the two sets (single sample vs batch).


```{r}
# This has been pre-computed
vcf_path = "/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/inputQC/23andMe_impute/vcf/"

loadBatchVcf = function(chr, vcf_path){

  vcf = fread(paste0(vcf_path, 'chr', chr,'.imputed.vcf.gz'),
              showProgress=F, nThread=1, data.table=FALSE)
  return(vcf)
}

#Pre-computed
#vcfs = mclapply(1:22, loadBatchVcf, vcf_path=vcf_path, mc.cores=16)

calc_prs = function(vcf, ids, prssnps_chr){

        idx = match(prssnps_chr$newid, paste0(vcf$ID,':',vcf$REF,':', vcf$ALT))
        tmp = vcf[idx,]
        scores = rep(NA, length(ids))
        for(i in 1:length(ids)){
                id = ids[i]
                tpp = tmp[,c(1:9, which(colnames(tmp) == id))]
                tp = str_split_fixed(tpp$FORMAT, ":", n=4)
                tp1 = str_split_fixed(tpp[,id], ":", n=4)
                idx1=which(tp[,1]=='DS')
                idx2=which(tp[,2]=='DS')
                idx3=which(tp[,3]=='DS')
                idx4=which(tp[,4]=='DS')
                fprs=rep(0,nrow(tp))

                if(length(idx1)!=0){
                        fprs[idx1]=as.numeric(tp1[idx1,1])
                }

                if(length(idx2)!=0){
                        fprs[idx2]=as.numeric(tp1[idx2,2])
                }

                if(length(idx3)!=0){
                        fprs[idx3]=as.numeric(tp1[idx3,3])
                }

                if(length(idx4)!=0){
                        fprs[idx4]=as.numeric(tp1[idx4,4])
                }

                scores[i] = as.numeric(as.numeric(fprs) %*% as.matrix(prssnps_chr$beta_grid4))
        }
        return(scores)
}

#Pre-computed
#scores = mclapply(1:22, function(chr) {calc_prs(vcfs[[chr]], ids, prssnps_chr=prssnps[prssnps$chr == chr, ])}, mc.cores=16)
#results$PRS.batch.raw = NA
#for(i in 1:nrow(results)){
#
#        results$PRS.batch.raw[i] = sum(unlist(lapply(scores, '[', i)))
#
#}

results = read.table("/fh/fast/peters_u/GECCO_Working/robert_working/nextflow/FH-PRS-tool-example/inputQC/23andMe_imputation_stats_w_batch_May8_2025.tsv",
                     header=T, sep='\t')

ggplot(results, aes(x=PRS.raw, y=PRS.batch.raw, color=chip)) + geom_point(pch=1) + geom_abline(slope=1, intercept=0)

#Correlation of dosage
cor(results$PRS.raw , results$PRS.batch.raw)

r = results$PRS.raw - results$PRS.batch.raw

#SD by chip
tapply(r, results$chip, sd)

#Bin missingness
results$missing.cat = ifelse(results$pct.NA < 0.015, 'low', ifelse(results$pct.NA < 0.025, 'medium', 'high'))

table(results$chip, results$missing.cat)

#SD by missingness
tapply(r, results$missing.cat, sd)

#Boxplot by chip and missingness

ggplot(results, aes(x=missing.cat, y=R2.mean, fill=chip)) + geom_boxplot()

#Correlation by missingness
cor(results$PRS.raw[ results$missing.cat == "high"] , results$PRS.batch.raw[results$missing.cat == "high"])
cor(results$PRS.raw[ results$missing.cat == "low"] , results$PRS.batch.raw[results$missing.cat == "low"])
cor(results$PRS.raw[ results$missing.cat == "medium"] , results$PRS.batch.raw[results$missing.cat == "medium"])

```

Pearson correlation of single-sample-imputed and batch-imputed exceeds 0.95. 

The standard deviation of the PRS by chip is higher for the 600k and 950k chips 
and standard deviation of the PRS by missingness is higher for >2.5%. 

